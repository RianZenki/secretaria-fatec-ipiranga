// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Aluno {
  id           String        @id @default(uuid())
  nome         String
  email        String        @unique
  curso        String
  turno        String
  ra           String        @unique
  senha        String
  token        String        @unique
  autenticado  Boolean       @default(false)
  solicitacoes Solicitacao[]
  Resposta     Resposta[]

  @@map("alunos")
}

model Solicitacao {
  id            String     @id @default(uuid())
  tipo          String
  descricao     String
  status        String     @default("em andamento")
  criado_em     DateTime   @default(now())
  atualizado_em DateTime   @default(now())
  encerrado_em  DateTime?
  Aluno         Aluno?     @relation(fields: [alunoId], references: [id])
  alunoId       String?
  Arquivo       Arquivo[]
  Resposta      Resposta[]

  @@map("solicitacoes")
}

model Arquivo {
  id            String       @id @default(uuid())
  nome          String
  Solicitacao   Solicitacao? @relation(fields: [solicitacaoId], references: [id])
  solicitacaoId String?
  Resposta      Resposta?    @relation(fields: [respostaId], references: [id])
  respostaId    String?

  @@map("arquivos")
}

model Resposta {
  id            String      @id @default(uuid())
  solicitacaoId String
  solicitcao    Solicitacao @relation(fields: [solicitacaoId], references: [id])
  remetente     String
  descricao     String
  arquivo       Arquivo[]
  criado_em     DateTime    @default(now())
  origem        String
  aluno         Aluno?      @relation(fields: [alunoId], references: [id])
  alunoId       String?
  //secretario

  @@map("respostas")
}

model Departamento {
  id                      String                    @id @default(uuid())
  nome                    String
  Departamento_secretario Departamento_secretario[]

  @@map("departamentos")
}

model Secretario {
  id                      String                    @id @default(uuid())
  numeroMatricula         String                    @unique
  nome                    String
  email                   String                    @unique
  senha                   String
  token                   String                    @unique
  Departamento_secretario Departamento_secretario[]

  @@map("secretarios")
}

model Departamento_secretario {
  id             String       @id @default(uuid())
  departamento   Departamento @relation(fields: [departamentoId], references: [id])
  secretario     Secretario   @relation(fields: [secretarioId], references: [id])
  departamentoId String
  secretarioId   String

  @@map("departamentos_secretarios")
}
